"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã Telegram Bot + FastAPI CRM
"""
import os
import sys
import threading
import asyncio
import uvicorn
import logging
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv('.env')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
if not os.environ.get('TELEGRAM_TOKEN') or os.environ.get('TELEGRAM_TOKEN') == 'your_telegram_bot_token_here':
    logger.error("TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    print("‚ùå –û–®–ò–ë–ö–ê: TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    print("üìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω")
    print("üîë –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω: https://t.me/BotFather")
    sys.exit(1)


def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    required_packages = {
        'fastapi': 'fastapi',
        'uvicorn': 'uvicorn',
        'sqlalchemy': 'sqlalchemy',
        'python-telegram-bot': 'telegram',
        'pydantic-settings': 'pydantic_settings'
    }
    
    missing_packages = []
    for package, import_name in required_packages.items():
        try:
            __import__(import_name)
        except ImportError:
            missing_packages.append(package)
    
    if missing_packages:
        logger.error(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {missing_packages}")
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {', '.join(missing_packages)}")
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
        return False
    
    logger.info("–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    return True


def run_bot():
    """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞"""
    try:
        from app.bot.bot import create_bot
        bot = create_bot()
        logger.info("–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
        print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
        bot.run()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")


def run_admin():
    """–ó–∞–ø—É—Å–∫ FastAPI –∞–¥–º–∏–Ω–∫–∏"""
    try:
        from app.admin.app import app
        from app.core.database import check_database_connection
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
        if not check_database_connection():
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return
        
        logger.info("–ó–∞–ø—É—Å–∫ FastAPI –∞–¥–º–∏–Ω–∫–∏...")
        print("üåê –ó–∞–ø—É—Å–∫ FastAPI –∞–¥–º–∏–Ω–∫–∏...")
        
        uvicorn.run(
            app,
            host=os.environ.get('HOST', '0.0.0.0'),
            port=int(os.environ.get('PORT', 8001)),
            log_level="info",
            access_log=True
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω–∫–∏: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω–∫–∏: {e}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    logger.info("–ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã Telegram Bot + FastAPI CRM...")
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã Telegram Bot + FastAPI CRM...")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if not check_dependencies():
        sys.exit(1)
    
    # –î–ª—è Windows –∑–∞–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, –±–æ—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º
    admin_thread = threading.Thread(target=run_admin, daemon=True)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω–∫—É –≤ —Ñ–æ–Ω–µ
        logger.info("–ó–∞–ø—É—Å–∫ FastAPI –∞–¥–º–∏–Ω–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ...")
        print("üåê –ó–∞–ø—É—Å–∫ FastAPI –∞–¥–º–∏–Ω–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ...")
        admin_thread.start()
        
        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω–∫–∏
        import time
        time.sleep(3)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–¥–º–∏–Ω–∫–∞ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å
        if admin_thread.is_alive():
            logger.info("–ê–¥–º–∏–Ω–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            print("‚úÖ –ê–¥–º–∏–Ω–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞!")
            print("=" * 50)
            print("üåê FastAPI Admin: http://localhost:8001")
            print("üìö API Docs: http://localhost:8001/docs")
            print("üîç Health Check: http://localhost:8001/health")
            print("=" * 50)
        else:
            logger.warning("–ê–¥–º–∏–Ω–∫–∞ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å")
            print("‚ö†Ô∏è –ê–¥–º–∏–Ω–∫–∞ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ (–¥–ª—è Windows)
        logger.info("–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ...")
        print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ...")
        run_bot()
            
    except KeyboardInterrupt:
        logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        logger.info("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã")
        sys.exit(0)


if __name__ == "__main__":
    main()
