"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import sqlite3
import os
from pathlib import Path

def migrate_unique_constraints():
    """–ú–∏–≥—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π"""
    db_path = Path("bot_database.db")
    
    if not db_path.exists():
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("üîÑ –ù–∞—á–∏–Ω–∞—é –º–∏–≥—Ä–∞—Ü–∏—é —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π...")
        
        # 1. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
        print("üìù –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–±–ª–∏—Ü–µ
        cursor.execute("PRAGMA table_info(users)")
        columns = cursor.fetchall()
        
        # –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –¥–ª—è telegram_id
        cursor.execute("PRAGMA index_list(users)")
        indexes = cursor.fetchall()
        
        for index in indexes:
            index_name = index[1]
            if 'telegram_id' in index_name and 'unique' in index_name.lower():
                print(f"üóëÔ∏è –£–¥–∞–ª—è—é –∏–Ω–¥–µ–∫—Å: {index_name}")
                cursor.execute(f"DROP INDEX {index_name}")
        
        # 2. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
        print("üìù –°–æ–∑–¥–∞—é –Ω–æ–≤—ã–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è...")
        
        # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è username
        cursor.execute("""
            CREATE UNIQUE INDEX IF NOT EXISTS idx_users_username_unique 
            ON users(username) 
            WHERE username IS NOT NULL
        """)
        print("‚úÖ –°–æ–∑–¥–∞–Ω —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è username")
        
        # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è contact_number
        cursor.execute("""
            CREATE UNIQUE INDEX IF NOT EXISTS idx_users_contact_number_unique 
            ON users(contact_number) 
            WHERE contact_number IS NOT NULL
        """)
        print("‚úÖ –°–æ–∑–¥–∞–Ω —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è contact_number")
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è telegram_id (–Ω–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π)
        cursor.execute("""
            CREATE INDEX IF NOT EXISTS idx_users_telegram_id 
            ON users(telegram_id)
        """)
        print("‚úÖ –°–æ–∑–¥–∞–Ω –æ–±—ã—á–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è telegram_id")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        print("üíæ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute("PRAGMA index_list(users)")
        indexes = cursor.fetchall()
        print("\nüìã –¢–µ–∫—É—â–∏–µ –∏–Ω–¥–µ–∫—Å—ã —Ç–∞–±–ª–∏—Ü—ã users:")
        for index in indexes:
            print(f"  - {index[1]} ({'—É–Ω–∏–∫–∞–ª—å–Ω—ã–π' if index[2] else '–æ–±—ã—á–Ω—ã–π'})")
        
        conn.close()
        print("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        if 'conn' in locals():
            conn.rollback()
            conn.close()
        return False

if __name__ == "__main__":
    migrate_unique_constraints()
